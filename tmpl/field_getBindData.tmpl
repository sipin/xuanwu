func () (data []*IDLabelPair) {
	#if len($pkg) == 0
		objs, _ := $(col)FindAll(nil)
	#else
		objs, _ := $(pkg).$(col)FindAll(nil)
	#end if
	length := len(objs)
	#if hasattr($field.const_value, 'value')
	length += 1
	#end if
	tr := func(val string) string {
		return val
	}
	#if len($pkg) == 0
	model := New$(col)().$(label)Widget()
	#else
	model := $(pkg).New$(col)().$(label)Widget()
	#end if
	if model.GetBindData != nil {
		bindData := model.GetBindData()
		bindDataMap := map[string]string{}
		for _, data := range bindData {
			bindDataMap[data.ID] = data.Label
		}
		tr = func(val string) (result string) {
			result, _ = bindDataMap[val]
			return 
		}
	}
	data = make([]*IDLabelPair, 0, length)
	#if hasattr($field.const_value, 'value')
	data = append(data, &IDLabelPair {"", "", ""})
	#end if
	for _, obj := range(objs) {
		data = append(data, &IDLabelPair {
			ID : obj.ID.Hex(),
			Label : tr(obj.$label),
		})
	}

	return
}
