func () (subInput string, data map[string][]*IDLabelPair) {
	subInput = "$subInput"
	data = map[string][]*IDLabelPair{}
	#if not $field.bindPackage
	indexs, _ := $(field.bindTable)FindAll(nil)
	#else
	indexs, _ := $(field.bindPackage).$(field.bindPackage)FindAll(nil)
	#end if
	for _, index := range(indexs) {
		query := bson.M{"$subStructIndex": index.ID.Hex()}
		objs, _ := $(subStruct)FindAll(query)
		length := len(objs)
		if length <=0 {
			continue
		}
		groupedData := make([]*IDLabelPair, 0, length)
		for _, obj := range objs {
			groupedData = append(groupedData, &IDLabelPair{
				ID: obj.ID.Hex(),
				Label: obj.$subStructView,
			})
		}
		data[index.ID.Hex()] = groupedData
	}

	return
}
